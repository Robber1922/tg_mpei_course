//https://leetcode.com/problems/binary-tree-maximum-path-sum/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int calculateMaxSum(TreeNode* root, int& global){
        if (root == NULL){
            return 0;
        }
        int left_sum = calculateMaxSum(root->left, global);
        int right_sum = calculateMaxSum(root->right, global);
        int curr = root->val;
        int node = root->val;
        
        if (curr + left_sum > curr)
            curr += left_sum;
        if(curr + right_sum > curr)
            curr += right_sum;
        
        if (curr > global)
            global = curr;
        return max(node, max(node + left_sum, node + right_sum));
    }
    int maxPathSum(TreeNode* root) {
        int global = INT_MIN;
        calculateMaxSum(root, global);
        return global;
    }
};
