//https://leetcode.com/problems/maximum-depth-of-n-ary-tree/

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    int maxDepth(Node* root) {
        if (root==NULL){
            return 0;
        }
         vector<Node*> baby;
        if (root){
            baby=root->children;
        }
        int maximum=1;
        for (int i=0;i<baby.size();i++){
            if (baby[i]){
                int depth = 1 + maxDepth(baby[i]);
                maximum = max(depth,maximum);
            }
        }
            
       return maximum; 
    }
};
